data = a[a$deletion == 0,],
length)
a[a$deletion == 0,]
a[a$deletion == 1,]
a[a$deletion == 1,]
a[a$deletion == 0,]
aggregate(a$deletion~a$gramm.cat,
data = a[a$deletion == 1,],
length)
aggregate(.~a$deletion+a$gramm.cat,
data = a[a$deletion == 1,],
length)
aggregate(.~a$deletion+a$gramm.cat,
data = a[a$deletion == 1,],
length)
del <- a[a$deletion == 1,]
ndel <- a[a$deletion == 0,]
aggregate(del$deletion~del$gramm.cat,
data = del,
length)
aggregate(ndel$deletion~ndel$gramm.cat,
data = ndel,
length)
aggregate(deletion~gramm.cat,
data = del,
length)
aggregate(deletion~gramm.cat,
data = c(del, ndel),
length)
aggregate(deletion~gramm.cat,
data = a,
length)
aggregate(deletion~gramm.cat,
data = del,
length)
aggregate(ndel$deletion~ndel$gramm.cat,
data = ndel,
length)
delag <- aggregate(deletion~gramm.cat,
data = del,
length)
ndelag <- aggregate(ndel$deletion~ndel$gramm.cat,
data = ndel,
length)
ndelag[,2]
delall <- cbind.data.frame(delag, ndelag[,2])
delall
a <- matrix(c(13, 7, 22, 28), nrow = 2)
a
chisq.test(a)
mcnemar.test(a)
a <- read.csv("http://goo.gl/NwbKsN")
aggregate(deletion~gramm.cat,
data = a,
summary)
a$deletion
a$deletion <- factor(a$deletion)
aggregate(deletion~gramm.cat,
data = a,
summary)
View(a)
aggregate(deletion~gramm.cat+phon.cont+social,
data = a,
summary)
aggregate(deletion~gramm.cata$deletion,
data = a,
summary)
aggregate(deletion~gramm.cat+phon.cont+social,
data = a,
summary)
b <- aggregate(deletion~gramm.cat+phon.cont+social,
data = a,
summary)
b[order(b$deletion),]
View(b)
b <- aggregate(deletion~gramm.cat+phon.cont+social,
data = a,
prop.table)
b
b[,4]
prop.table(b[,4])
prop.table(b[,4], 3)
prop.table(b[,4], 2)
prop.table(b[,4])
prop.table(b[1,4])
for (i in 1:54) {
prop.table(b[i,4])
}
rop.table(b[i,4])
prop.table(b[i,4])
for (i in 1:54) {
print(prop.table(b[i,4]))
}
b <- aggregate(deletion~gramm.cat+phon.cont+social,
data = a,
prop.table)
b <- aggregate(deletion~gramm.cat+phon.cont+social,
data = a,
prop.table)
a <- read.csv("http://goo.gl/NwbKsN")
a$deletion <- factor(a$deletion)
b <- aggregate(deletion~gramm.cat+phon.cont+social,
data = a,
prop.table)
b <- aggregate(deletion~gramm.cat+phon.cont+social,
data = a,
summary)
b
b <- aggregate(deletion~gramm.cat,
data = a,
summary)
aggregate(deletion~gramm.cat,
data = a,
summary)
a <- read.csv("http://goo.gl/NwbKsN")
View(a)
View(a)
a <- read.csv("http://goo.gl/9P6nfL")
a <- read.csv("http://goo.gl/9P6nfL")
View(a)
a <- read.csv("http://goo.gl/sXYvi2")
aggregate(deletion~gramm.cat,
data = a,
summary)
aggregate(s.deletion~gramm.cat,
data = a,
summary)
aggregate(s.deletion~gramm.cat+phon.cont,
data = a,
summary)
aggregate(s.deletion~gramm.cat+phon.cont,
data = a,
summary)
library(plyr)
aggregate(s.deletion~gramm.cat+phon.cont,
data = a,
summarize)
b <- aggregate(s.deletion~gramm.cat+phon.cont,
data = a,
summary)
b[,4]
b[,3]
b[1,3]
proptable(b[1,3])
prop.table(b[1,3])
prop.table(b[2,3])
apply(b[,3], 1, prop.table)
b <- aggregate(s.deletion~gramm.cat+phon.cont,
data = a,
summary)
b[,3] <- apply(b[,3], 1, prop.table)
b[,3] <- c(apply(b[,3], 1, prop.table))
apply(b[,3], 1, prop.table)
apply(b[,3], 1, prop.table)[,1]
apply(b[,3], 1, prop.table)[1,]
b$prop.no <- apply(b[,3], 1, prop.table)[1,]
b$prop.yes <- apply(b[,3], 1, prop.table)[2,]
View(b)
b <- aggregate(s.deletion~.,
data = a,
summary)
b$prop.no <- apply(b[,3], 1, prop.table)[1,]
b$prop.yes <- apply(b[,3], 1, prop.table)[2,]
View(b)
b$prop.no <- apply(b[,4], 1, prop.table)[1,]
b$prop.yes <- apply(b[,4], 1, prop.table)[2,]
b <- aggregate(s.deletion~gramm.cat,
data = a,
summary)
b$prop.no <- apply(b[,2], 1, prop.table)[1,]
b$prop.yes <- apply(b[,2], 1, prop.table)[2,]
View(b)
b <- aggregate(s.deletion~gramm.cat,
data = a,
summary)
length(b)
b <- aggregate(s.deletion~gramm.cat,
data = a,
summary)
b$prop.no <- apply(b[,length(b)], 1, prop.table)[1,]
b$prop.yes <- apply(b[,length(b)], 1, prop.table)[2,]
b <- aggregate(s.deletion~gramm.cat,
data = a,
summary)
b$prop.no <- apply(b[,length(b)], 1, prop.table)[1,]
b$prop.yes <- apply(b[,length(b)], 1, prop.table)[2,]
b$prop.yes <- apply(b[,length(b)], 1, prop.table)[2,]
b$prop.yes <- apply(b[,length(b)-1], 1, prop.table)[2,]
b
b$prop.yes <- apply(b[,length(b)-1], 1, round(prop.table, 2))[2,]
round(b$prop.no, 2)
b$prop.no <- round(b$prop.no, 2)
b$prop.yes <- round(b$prop.yes, 2)
b
b <- aggregate(s.deletion~.,
data = a,
summary)
b$prop.no <- apply(b[,length(b)], 1, prop.table)[1,]
b$prop.yes <- apply(b[,length(b)-1], 1, prop.table) [2,]
b$prop.no <- round(b$prop.no, 2)
b$prop.yes <- round(b$prop.yes, 2)
b
b <- aggregate(s.deletion~.,
data = a,
summary)
b$prop.no <- apply(b[,length(b)], 1, prop.table)[1,]
b$prop.yes <- apply(b[,length(b)-1], 1, prop.table) [2,]
b$prop.no <- round(b$prop.no, 2)
b$prop.yes <- round(b$prop.yes, 2)
b
b[order(b$prop.yes),]
install.packages(c("Bolstad", "caret", "curl", "devtools", "emojifont", "ggThemeAssist", "ggthemes", "gmailr", "gplots", "lme4", "lubridate", "nlme", "plotly", "RcppArmadillo", "rsconnect", "smacof", "sp", "testthat"))
install.packages(c("Bolstad", "caret", "curl", "devtools", "emojifont",
install.packages(c("Bolstad", "caret", "curl", "devtools", "emojifont", "ggThemeAssist", "ggthemes", "gmailr", "gplots", "lme4", "lubridate", "nlme", "plotly", "RcppArmadillo", "rsconnect", "smacof", "sp", "testthat"))
install.packages(c("Bolstad", "caret", "curl", "devtools", "emojifont", "ggThemeAssist", "ggthemes", "gmailr", "gplots", "lme4", "lubridate", "nlme", "plotly", "RcppArmadillo", "rsconnect", "smacof", "sp", "testthat"))
library(ggplot2)
d <- data.frame(x=gl(10, 1, 10, labels=paste("long text label ", letters[1:10])), y=rnorm(10))
ggplot(d, aes(x=x, y=y)) + geom_point() +
theme(text = element_text(size=20))
df <- mtcars
d <- data.frame(x= df$mpg, y df$hp)
ggplot(d, aes(x=x, y=y)) + geom_point() +
theme(text = element_text(size=20))
ggplot(df, aes(x=df$mpg, y = df$hp)) + geom_point() +
theme(text = element_text(size=20))
ggplot(df, aes(x=df$mpg, y = df$hp, color = df$cyl)) + geom_point() +
theme(text = element_text(size=20))
3/7
log(3/7)
exp(-1)
log(24/17)
exp(-0.8473)
0.4285705*50/1.4285705
15/35
exp(1.1243)+exp(-2.4778)
197:64
197/64
30/360
93/360
(197/64)/(93/360)
par(col = "purple")
plot(1, 1, xlim = c(0,800), ylim = c(0,1600), type = "n", bty = "n", xaxt = "n", yaxt = "n", xlab = "", ylab = "")
symbols(x = 400, y = 1200, circles = 400, add = T, lwd = 40)
lines(x = c(400, 400), y = c(900, 100), lwd = 40, lend = 1)
lines(x = c(480, 320), y = c(500, 500), lwd = 40, lend = 1)
polygon(x = c(400, 480, 400, 320, 400), y = c(-20, 200, 100, 200, -20), col = "purple", border = "purple")
polygon(x = c(450, 500, 500, 450), y = c(500, 600, 400, 500), col = "purple", border = "purple")
polygon(x = c(350, 300, 300, 350), y = c(500, 600, 400, 500), col = "purple", border = "purple")
curve(expr = 100*log(x)+250, from = 100, to = 700, add = T, lwd = 40, lend = 1)
polygon(x = c(600, 750, 720, 750, 600), y = c(900, 1100, 900, 700, 900), col = "purple", border = "purple")
symbols(x = 100, y = 620, circles = 50, add = T, lwd = 40, inches = F, bg = "purple")
b <- 21:30
a <- 1:10
df <- as.data.frame(a, b)
df <- as.data.frame(c(a, b))
View(df)
df <- as.data.frame(c(a, b), nrow = 2)
View(df)
df <- as.data.frame(a, b, nrow = 2)
df <- data.frame(a, b, nrow = 2)
df <- data.frame(a, b)
View(df)
quartet <- read.csv("/home/agricolamz/_DATA/OneDrive1/_Work/Scripts/_R/Anscombe's quartet/anscombe.s.quartet.csv")
head(quartet)
View(quartet)
sapply(quartet[, 1:4*2-1], mean)                  # mean of x
sapply(quartet[, 1:4*2], mean)                    # mean of y
sapply(quartet[, 1:4*2], mean)                    # mean of y
sapply(quartet[, 1:4*2-1], sd)                    # sd of x
sapply(quartet[, 1:4*2], sd)                      # sd of y
mapply(cor, quartet[, 1:4*2-1], quartet[, 1:4*2]) # correlation
mapply(cor, quartet[, 1:4*2-1], quartet[, 1:4*2]) # correlation
packs <- c("ggplot2","grid", "gridExtra")
lapply(packs, require, character.only = TRUE)
p1 <- ggplot(quartet, aes(X1, Y1)) +
geom_smooth(method = "lm") +
geom_point()+
theme_bw()
p2 <- ggplot(quartet, aes(X2, Y2)) +
geom_smooth(method = "lm") +
geom_point()+
theme_bw()
p3 <- ggplot(quartet, aes(X3, Y3)) +
geom_smooth(method = "lm") +
geom_point()+
theme_bw()
p4 <- ggplot(quartet, aes(X4, Y4)) +
geom_smooth(method = "lm") +
geom_point()+
theme_bw()
grid.arrange(p1, p2, p3, p4, ncol = 2, top = "Anscombe's quartet")
library(leaflet)
setwd("/home/agricolamz/_DATA/OneDrive1/_Work/Atlas.of.Caucasian.Languages/Dagestanian.atlas/affective")
dag <- read.csv("dag_affective.csv")
palforlang <- colorFactor(c("#53FA05", # Agul
"#940000", # Akhvakh
"#823F08", # Andi
"#2FA80A", # Archi
"#E6B66E", # Bagvalal
"#5509D9", # Bezhta
"#B54E09", # Chamalal
"#A7B8B6", # Chechen
"#C2C200", # Gapshiminskij
"#FF4D00", # Godoberinskij
"#0AF7D3", # Gunzibskij
"#E88300", # Karatinskij
"#006FFF", # Khvarshi
"red", # Kumykskij
"#E000E0", # Lak
"#12E667", # Lezgian
"#FFF700", # Mehweb
"#FFC400", # Muiri
"pink", # Nogajskij
"#FFF700", # North-Dargwa
"#EDE134", # Sanzhi-Itsari
"#99E600", # Tsakhur
"#0099D6", # Tsez
"#EAFF00"  # Usisha-Tsudakhar
), domain = dag$language)
palforfeature <- colorFactor(c("white", "black"), domain = dag$affective)
dagplot <- leaflet(dag) %>%
addTiles() %>%
addCircleMarkers(lng=dag$longitude,
lat=dag$latitude,
popup=dag$language,
stroke = T,
radius = 11,
fillOpacity = 0.9,
color = palforfeature(dag$affective),
group = dag$affective) %>%
addCircleMarkers(lng=dag$longitude,
lat=dag$latitude,
popup=dag$language,
stroke = F,
radius = 2,
fillOpacity = 0.5,
color = palforlang(dag$language),
group = dag$language) %>%
addLegend(title = "",
position = c("bottomleft"),
pal = palforlang,
values = dag$language,
opacity = 0.4)%>%
addLegend(title = "",
position = c("bottomleft"),
pal = palforfeature,
values = dag$affective,
opacity = 0.4)%>%
addLayersControl(
overlayGroups = dag$affective,
options = layersControlOptions(collapsed = F))
dagplot
dagplot <- leaflet(dag) %>%
addTiles() %>%
addCircleMarkers(lng=dag$longitude,
lat=dag$latitude,
popup=dag$language,
stroke = T,
radius = 11,
fillOpacity = 0.9,
color = palforfeature(dag$affective),
group = dag$affective) %>%
addCircleMarkers(lng=dag$longitude,
lat=dag$latitude,
popup=dag$language,
stroke = F,
radius = 4,
fillOpacity = 0.5,
color = palforlang(dag$language),
group = dag$language) %>%
addLegend(title = "",
position = c("bottomleft"),
pal = palforlang,
values = dag$language,
opacity = 0.4)%>%
addLegend(title = "",
position = c("bottomleft"),
pal = palforfeature,
values = dag$affective,
opacity = 0.4)%>%
addLayersControl(
overlayGroups = dag$affective,
options = layersControlOptions(collapsed = F))
dagplot
dagplot <- leaflet(dag) %>%
addTiles() %>%
addCircleMarkers(lng=dag$longitude,
lat=dag$latitude,
popup=dag$language,
stroke = F,
radius = 11,
fillOpacity = 0.9,
color = palforfeature(dag$affective),
group = dag$affective) %>%
addCircleMarkers(lng=dag$longitude,
lat=dag$latitude,
popup=dag$language,
stroke = T,
radius = 4,
fillOpacity = 0.5,
color = palforlang(dag$language),
group = dag$language) %>%
addLegend(title = "",
position = c("bottomleft"),
pal = palforlang,
values = dag$language,
opacity = 0.4)%>%
addLegend(title = "",
position = c("bottomleft"),
pal = palforfeature,
values = dag$affective,
opacity = 0.4)%>%
addLayersControl(
overlayGroups = dag$affective,
options = layersControlOptions(collapsed = F))
dagplot
dagplot <- leaflet(dag) %>%
addTiles() %>%
addCircleMarkers(lng=dag$longitude,
lat=dag$latitude,
popup=dag$language,
stroke = F,
radius = 11,
fillOpacity = 0.9,
color = palforfeature(dag$affective),
group = dag$affective) %>%
addCircleMarkers(lng=dag$longitude,
lat=dag$latitude,
popup=dag$language,
stroke = F,
radius = 4,
fillOpacity = 0.5,
color = palforlang(dag$language),
group = dag$language) %>%
addLegend(title = "",
position = c("bottomleft"),
pal = palforlang,
values = dag$language,
opacity = 0.4)%>%
addLegend(title = "",
position = c("bottomleft"),
pal = palforfeature,
values = dag$affective,
opacity = 0.4)%>%
addLayersControl(
overlayGroups = dag$affective,
options = layersControlOptions(collapsed = F))
dagplot
dagplot <- leaflet(dag) %>%
addTiles() %>%
addCircleMarkers(lng=dag$longitude,
lat=dag$latitude,
popup=dag$language,
stroke = F,
radius = 11,
fillOpacity = 0.5,
color = palforfeature(dag$affective),
group = dag$affective) %>%
addCircleMarkers(lng=dag$longitude,
lat=dag$latitude,
popup=dag$language,
stroke = F,
radius = 4,
fillOpacity = 0.9,
color = palforlang(dag$language),
group = dag$language) %>%
addLegend(title = "",
position = c("bottomleft"),
pal = palforlang,
values = dag$language,
opacity = 0.4)%>%
addLegend(title = "",
position = c("bottomleft"),
pal = palforfeature,
values = dag$affective,
opacity = 0.4)%>%
addLayersControl(
overlayGroups = dag$affective,
options = layersControlOptions(collapsed = F))
dagplot
dagplot <- leaflet(dag) %>%
addTiles() %>%
addCircleMarkers(lng=dag$longitude,
lat=dag$latitude,
popup=dag$language,
stroke = F,
radius = 11,
fillOpacity = 0.8,
color = palforfeature(dag$affective),
group = dag$affective) %>%
addCircleMarkers(lng=dag$longitude,
lat=dag$latitude,
popup=dag$language,
stroke = F,
radius = 4,
fillOpacity = 0.6,
color = palforlang(dag$language),
group = dag$language) %>%
addLegend(title = "",
position = c("bottomleft"),
pal = palforlang,
values = dag$language,
opacity = 0.4)%>%
addLegend(title = "",
position = c("bottomleft"),
pal = palforfeature,
values = dag$affective,
opacity = 0.4)%>%
addLayersControl(
overlayGroups = dag$affective,
options = layersControlOptions(collapsed = F))
dagplot
